{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onChange","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","event","target","backgroundColor","rows","onClick","toUpperCase","toLowerCase","txtArray","split","newTxtArray","i","length","txt","newTxt","j","push","join","copyTxt","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","App","setMode","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3381e0db.chunk.js","sourcesContent":["import React from 'react'\r\n// import {Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item active\">\r\n          <to className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></to>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" hrefS=\"/about\">About</a>\r\n        </li> */}\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'gery':'light'}`}>\r\n        <input className=\"form-check-input\" onChange={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  </nav>\r\n   </>\r\n  )\r\n}\r\n\r\n\r\n","import React , {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const toUpper = () =>{\r\n        setText(text.toUpperCase());\r\n\r\n    }\r\n\r\n    const toLower = () =>{\r\n        setText(text.toLowerCase());\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const setDefault = () =>{\r\n        setText(\"Enter text here\")\r\n    }\r\n\r\n    const copyText = () =>{\r\n\r\n        let copyTxt=document.getElementById(\"textdata\");\r\n        copyTxt.select();\r\n        copyTxt.setSelectionRange(0,999999);\r\n        navigator.clipboard.writeText(copyTxt.value);\r\n\r\n\r\n    }\r\n\r\n\r\n    const firstLetterUpper= () =>{\r\n       const txtArray=text.split(\" \");\r\n       const newTxtArray=[];\r\n\r\n       for (let i = 0; i < txtArray.length; i++) {\r\n        const txt=txtArray[i].split(\"\")\r\n        const newTxt=[]\r\n        for (let j=0;j<txt.length;j++){\r\n            if(j===0){\r\n                newTxt.push(txt[j].toUpperCase())\r\n            }\r\n            else{\r\n            newTxt.push(txt[j])\r\n            }\r\n        }\r\n        newTxtArray.push(newTxt.join(\"\"))\r\n      }\r\n       setText(newTxtArray.join(\" \"))\r\n\r\n    }\r\n\r\n    const [text,setText]=useState(\"Enter text here\")\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='container my-3' style={{color: props.mode==='dark'?'blue':'black'}}>\r\n   \r\n        <h2>{props.heading}</h2>\r\n    <div className=\"mb-2\">\r\n      <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white',color: props.mode==='dark'?'white':'black'}} id=\"textdata\" rows=\"7\"></textarea>\r\n    </div>\r\n    <button type=\"button\" className=\"btn btn-primary\" onClick={setDefault}>Reset</button>\r\n    <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={toUpper}>Convert to upper</button>\r\n    <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={toLower}>Convert to Lower</button>\r\n    <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={firstLetterUpper}>Convert First Letter Upper</button>\r\n    <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={copyText}>Copy Text</button>\r\n  \r\n  </div>\r\n  <div className='container my-3' style={{color: props.mode==='dark'?'blue':'black'}}>\r\n     <h2>Your Text Summary</h2>\r\n     <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n     <p> {0.008* text.split(\" \").length} Minutes to read</p>\r\n     <h2>Preview</h2>\r\n     <p>{text}</p>\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport React , {useState} from 'react';\n// import About from './components/About';\n\nimport TextForm from './components/TextForm';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  \n  const [mode,setMode]=useState(\"light\")\n\n  const toggleMode = ()=>{\n\n    if(mode==='light'){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#05284a';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode }/>\n    <div className=\"container my-3\">\n    {/* <Routes>\n          <Route exact path=\"/about\" element={<About mode={mode} />} /> \n          <Route exact path=\"/\" element={<TextForm mode={mode} heading=\"Enter text here to analyze\"/>}/>\n    </Routes> */}\n    <TextForm mode={mode} heading=\"TextUtils\"></TextForm>\n    </div>\n    {/* </Router> */}\n    </>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}